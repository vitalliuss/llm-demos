import sqlite3
import json
from openai import OpenAI

client = OpenAI()

MODEL = "gpt-4.1"
DATABASE = "db/movies.sqlite"

database_schema_string = """
Table: movies
Columns: id, original_title, budget, popularity, release_date, revenue, title, vote_average, overview, tagline, uid, director_id
Table: directors
Columns: name, id, gender, uid, department
"""

tools = [
    {
        "type": "function",
        "name": "ask_database",
        "description": "Get an answer from the SQL database based on a query.",
        "parameters": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string",
                    "description": f"""
                            SQL query extracting info to answer the user's question.
                            SQL should be written using this database schema:
                            {database_schema_string}
                            The query should be returned in plain text, not in JSON.
                            """,
                }
            },
            "required": ["query"],
        },
    },
]

def ask_database(query):
    try:
        conn = sqlite3.connect(DATABASE)
        print("Executing query: ", query)
        results = conn.execute(query).fetchall()
        print("Query results: ", results)
        return results
    except Exception as e:
        raise Exception(f"SQL error: {e}")

messages = [
    {"role": "user", "content": "What is the most expensive movie in the database?."}
]

response = client.responses.create(
    model=MODEL,
    tools=tools,
    input=messages,
)

for item in response.output:
    if item.type == "function_call":
        if item.name == "ask_database":
            db_result = ask_database(json.loads(item.arguments)["query"])
            messages.append({"role": "assistant", "content": str(db_result)})
print("Messages: ", messages)

response = client.responses.create(
    model=MODEL,
    instructions="Respond to initial user question with a database result generated by a tool. Use markdown formatting.",
    input=messages,
)

print("Final output: " + response.output_text)